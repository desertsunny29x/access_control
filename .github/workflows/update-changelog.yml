name: Update Changelog

on:
  pull_request:
    types:
      - closed

permissions:
  contents: write
  pull-requests: read

jobs:
  update-changelog:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Update CHANGELOG.md
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_NUMBER=${{ github.event.pull_request.number }}
          PR_AUTHOR=${{ github.event.pull_request.user.login }}
          DATE=$(date -u +"%Y-%m-%d")

          # Initialize file if missing
          if [ ! -f CHANGELOG.md ]; then
            echo "# Changelog" > CHANGELOG.md
            echo "" >> CHANGELOG.md
          fi

          NEW_ENTRY="- **${PR_TITLE}** (PR [#${PR_NUMBER}](https://github.com/${{ github.repository }}/pull/${PR_NUMBER})) by @${PR_AUTHOR}"

          # If today's section exists, insert entry, then re-sort by PR number
          if grep -q "## ${DATE}" CHANGELOG.md; then
            awk -v date="## ${DATE}" -v entry="$NEW_ENTRY" -v prnum="$PR_NUMBER" '
              BEGIN { inserted=0 }
              {
                print $0
                if ($0 == date) {
                  print entry
                  inserted=1
                }
              }
              END {
                if (!inserted) {
                  print date
                  print entry
                }
              }
            ' CHANGELOG.md > CHANGELOG.tmp

            # Extract the section for today, sort its entries by PR number, and rebuild the file
            awk -v date="## ${DATE}" '
              BEGIN {in_section=0}
              /^## / {
                if (in_section && $0 != date) {
                  in_section=0
                }
              }
              {
                if ($0 == date) {
                  in_section=1
                }
                if (in_section) {
                  print > "section.tmp"
                } else {
                  print > "rest.tmp"
                }
              }
            ' CHANGELOG.tmp

            # Sort section lines that are PR entries by PR number
            head -n 1 section.tmp > sorted_section.tmp
            grep "^- \*\*" section.tmp | sort -t# -k2,2n >> sorted_section.tmp
            grep -v "^- \*\*" section.tmp | tail -n +2 >> sorted_section.tmp

            # Recombine
            cat sorted_section.tmp rest.tmp > CHANGELOG.md
            rm -f section.tmp rest.tmp sorted_section.tmp CHANGELOG.tmp
          else
            # Prepend new section for today
            {
              echo "## ${DATE}"
              echo "${NEW_ENTRY}"
              echo ""
              cat CHANGELOG.md
            } > CHANGELOG.tmp && mv CHANGELOG.tmp CHANGELOG.md
          fi

      - name: Commit and push changes
        run: |
          git add CHANGELOG.md
          git commit -m "docs: update changelog for PR #${{ github.event.pull_request.number }}"
          git push origin HEAD:${{ github.ref_name }}
